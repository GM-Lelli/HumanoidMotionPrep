using System;
using System.IO;
using UnityEngine;

public class RunPythonCommand : MonoBehaviour
{
    [Tooltip("Description of the animation you want to generate.")]
    public string textPrompt = "A person is running on a treadmill.";
    [Tooltip("The name of the output folder where the results will be saved.")]
    public string extension = "exp1";
    [Tooltip("The ID of the GPU to use for processing.")]
    public string gpuId = "0";
    private PythonCommandRunner commandRunner;
    private string saveDirectory = "Assets/Animations";


    void Awake()
    {
        // Define the path to the Python interpreter for the specified Conda environment 
        //string pythonPath = "C:/Users/39320/anaconda3/envs/mlagents/python.exe";
        string pythonPath = "/home/gianmarco/Apps/anaconda3/envs/gm_thesis_4/bin/python";

        // Specify the Python script to be executed
        string scriptName = "gen_t2m.py";

        // Set the working directory to the location where the script dependencies are stored
        string workingDir = Path.GetFullPath("../dependencies/momask-codes-main");

        // Initialize the PythonCommandRunner with the Python interpreter path, script name, and working directory
        commandRunner = new PythonCommandRunner(pythonPath, scriptName, workingDir);

        // Execute the Python script using the initialized command runner
        RunPythonScript();
    }

    /// <summary>
    /// Executes a Python script using the specified command runner, processes the output, 
    /// and converts a target BVH file into an AnimationClip.
    /// </summary>
    /// <remarks>
    /// This method validates the working directory, builds and executes a command to 
    /// run the Python script, retrieves the target file from the script's output, 
    /// and converts the file using a BVH converter. Errors during execution are logged.
    /// </remarks>

    public void RunPythonScript()
    {
        // Validate the working directory of the command runner
        if (!commandRunner.ValidateWorkingDirectory())
        {
            Debug.LogError("Invalid working directory: " + commandRunner.WorkingDirectory);
            return;
        }

        // Build the command string using the command runner with provided parameters
        string command = commandRunner.BuildCommand(gpuId, extension, textPrompt);

        try
        {
            // Execute the built command and capture the output from the Python script
            string output = commandRunner.ExecuteCommand(command);
            Debug.Log("Python script executed successfully. Output:\n" + output);

            // Retrieve the path of the target file generated by the Python script
            // 'extension' specifies the file type; index '2' retrieves the third file
            string bvhFolderPath = commandRunner.GetSpecificFile(extension, 2);
            Debug.Log("Target file found: " + bvhFolderPath);

            // Initialize the BVH converter with the target file path, save directory, and other parameters
            BVHConvert converter = new BVHConvert(bvhFolderPath, saveDirectory, false, 30.0f);

            // Convert the BVH file into an AnimationClip
            var clip = converter.ConvertBVH(bvhFolderPath, converter.GetFrameRate());
            Debug.Log("Momask file converted correctelly: " + clip.name);

            // Save the converted animation clip with the specified extension
            converter.SaveClip(clip, extension);
            Debug.Log("AnimationClip saved successfully.");

        }
        catch (Exception ex)
        {
            // Log an error if an exception occurs during the process
            Debug.LogError("An error occurred while running the Python script:\n" + ex.Message);
        }
    }

}